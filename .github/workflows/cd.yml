name: Release from tag
on:
  push:
    tags:
      - "*.*.*"
env:
  CARGO_TERM_COLOR: always

jobs:
      
  build_ui:
    name: Build UI
    runs-on: rsplayer-self-hosted
    steps:
    - uses: actions/checkout@v3
    # - uses: davidB/rust-cargo-make@v1
    # - uses: taiki-e/install-action@v2
    #   with:
    #     tool: wasm-pack
    - name: Build release
      run: cargo make build_ui_release
    - name: Upload pkg dir
      uses: actions/upload-artifact@v4
      with:
        name: web_ui
        path: rsplayer_web_ui/public/pkg
    
  build_backend:
    needs: build_ui
    strategy:
      matrix:
        target: ["arm-unknown-linux-gnueabihf", "armv7-unknown-linux-gnueabihf","aarch64-unknown-linux-gnu", "x86_64-unknown-linux-gnu"]
    name: Release
    # make it use older libc version
    runs-on: rsplayer-self-hosted
    steps:
    - uses: actions/checkout@v5
    # remove cache if you get random libc errors, target based key should help
    - name: Download web_ui
      uses: actions/download-artifact@v5
      with:
        name: web_ui
        path: rsplayer_web_ui/public/pkg
    # !!! Do not use binstall because it does not work well for cross compilation and libc dependency
    # - name: Install tools
    #   run: |
    #     cargo install cross
    #     cargo install cargo-deb
    - name: Build Backend
      run: cargo make --env TARGET=${{ matrix.target }} build_release
    - name: Create deb package
      run: cargo make --env RELEASE_VERSION=${GITHUB_REF_NAME} --env TARGET=${{ matrix.target }} package_deb_release
    - name: Upload deb package
      uses: actions/upload-artifact@v4
      with:
        name: deb-${{ matrix.target }}
        path: target/${{ matrix.target }}/debian/*.deb
    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: rsplayer-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/rsplayer
  publish:
    needs: build_backend
    name: Create release
    runs-on: rsplayer-self-hosted
    steps:
    - name: Download files
      uses: actions/download-artifact@v5
    # todo: make rename as generic script
    - name: Rename binary files
      run: |
        mv rsplayer-aarch64-unknown-linux-gnu/rsplayer rsplayer_arm64
        mv rsplayer-armv7-unknown-linux-gnueabihf/rsplayer rsplayer_armhfv7
        mv rsplayer-arm-unknown-linux-gnueabihf/rsplayer rsplayer_armhfv6
        mv rsplayer-x86_64-unknown-linux-gnu/rsplayer rsplayer_amd64
    - name: Display new structure of downloaded files
      run: ls -R
    - uses: ncipollo/release-action@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        artifacts: |
          deb-*/*.deb
          rsplayer_*
        draft: true
        prerelease: true
        generateReleaseNotes: true
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}